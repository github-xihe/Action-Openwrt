name: OpenWrt-x64

on:
  schedule:
    - cron: 0 21  * * *
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [x64]

    steps:
    - name: Checkout
      uses: actions/checkout@v2 
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
#    - name: cache
#      uses: klever1988/cachewrtbuild@main
#      with:
#        ccache: true
#        prefix: ${{ github.workspace }}/openwrt

#    - name: cache
#      uses: klever1988/cachewrtbuild@test
#      with:
#        ccache: true
#        mixkey: ${{matrix.target}}
#        prefix: ${{ github.workspace }}/openwrt

#    - name: Uncomment feeds source
#      run: cd openwrt && sed -i '$a src-git helloworld https://github.com/fw876/helloworld' feeds.conf.default
      
    - name: Update feeds and Install feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
         cd openwrt && mv $GITHUB_WORKSPACE/user/${{matrix.target}}/config.diff .config && cd ..        
         echo "Apply files..."
         if [ -n "$(ls -A "user/common/files" 2>/dev/null)" ]; then
         cp -r -f user/common/files/* openwrt/package/base-files/files/
         fi
         if [ -n "$(ls -A "user/${{matrix.target}}/files" 2>/dev/null)" ]; then
         cp -r -f user/${{matrix.target}}/files/* openwrt/package/base-files/files/
         fi
        
         echo "Apply custom.sh"
         if [ -f "user/common/custom.sh" ]; then
         (
           cd openwrt
           /bin/bash "$GITHUB_WORKSPACE/user/common/custom.sh"
         )
         fi       
         if [ -f "user/${{matrix.target}}/custom.sh" ]; then
         (
           cd openwrt
           /bin/bash "$GITHUB_WORKSPACE/user/${{matrix.target}}/custom.sh"
         )
         fi

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make V=s
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
        
    - name: Check space usage
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: | 
        df -hT
        echo "================================================="
        cd openwrt
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
      
#    - name: Upload dl directory
#      uses: actions/upload-artifact@main
#      if: steps.compile.outputs.status == 'success' && !cancelled()
#      with:
#       name: OpenWrt_dl_x64_${{matrix.target}}_${{ env.FILE_DATE }}
#       path: openwrt/dl

    - name: Upload packages directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_packages_${{matrix.target}}_${{ env.FILE_DATE }}
        path: openwrt/bin/packages

    - name: Prepare artifact
      id: artifact
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/buildinfo
        mkdir -p ./artifact/packages
        cp -rf $(find openwrt/bin/targets/ -type f -name "openwrt-x86-64-generic-squashfs-combined-efi.img.gz" -o -name "sha256sums") ./artifact/firmware/
        cp -rf $(find openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
        cp -rf $(find openwrt/bin/packages/ -type f -name "*.ipk") ./artifact/packages/
        tar -czvf ./openwrt-x86-64-packages.tar.gz ./artifact/packages/
        echo "::set-output name=status::success"

    - name: Upload buildinfo
      uses: actions/upload-artifact@main
      if: steps.artifact.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_buildinfo_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./artifact/buildinfo/

    - name: Upload firmware
      uses: actions/upload-artifact@main
      if: steps.artifact.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./artifact/firmware/
        
    - name: Upload artifact to release
      uses: svenstaro/upload-release-action@2.3.0
      if: steps.artifact.outputs.status == 'success' && !cancelled()
      env:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_name: OpenWrt_${{matrix.target}}_${{ env.FILE_DATE }}
        files : | 
          ./artifact/firmware/*
          ./artifact/buildinfo/*
          ./openwrt-x86-64-packages.tar.gz

    - name: Delete old Workflow Runs
      uses: Mattraks/delete-workflow-runs@v2
      if: steps.artifact.outputs.status == 'success' && !cancelled()
      with:
        retain_days: 8
        keep_minimum_runs: 3

    - name: Delete Older Releases
      uses: dev-drprasad/delete-older-releases@v0.2.0
      if: steps.artifact.outputs.status == 'success' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
