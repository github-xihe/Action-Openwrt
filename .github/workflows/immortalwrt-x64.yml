name: immortalwrt-x64

on:
  schedule:
    - cron: 0 19  1 * *
 # watch:
 #   types: started

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-18.06-k5.4
  UPLOAD_COWTRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    name: Build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: [immortalwrt-x64]

    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf intltool rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    
  #  - name: cache
  #    uses: klever1988/cachewrtbuild@main
  #    with:
  #      ccache: 'true'
  #      prefix:  ${{ github.workspace }}/openwrt    
    
    - name: Update feeds and Install feeds
      run: cd openwrt && ./scripts/feeds update -a && ./scripts/feeds install -a
      
    - name: Load custom configuration
      run: |
         cd openwrt && mv $GITHUB_WORKSPACE/user/${{matrix.target}}/config.diff .config && cd ..        
         echo "Apply files..."
         if [ -n "$(ls -A "user/${{matrix.target}}/files" 2>/dev/null)" ]; then
         cp -r -f user/${{matrix.target}}/files/* openwrt/package/base-files/files/
         fi        
         echo "Apply custom.sh"       
         if [ -f "user/${{matrix.target}}/custom.sh" ]; then
         (
           cd openwrt
           /bin/bash "$GITHUB_WORKSPACE/user/${{matrix.target}}/custom.sh"
         )
         fi
         
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make V=s
        echo "::set-output name=status::success"
        echo "FILE_DATE=$(date +"%Y%m%d")" >> $GITHUB_ENV
        
    - name: Check space usage
      if: (!cancelled())
      run: | 
        df -hT
        echo "================================================="
        cd openwrt
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        du -h --max-depth=1 ./bin/targets

    - name: Prepare artifact
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/buildinfo
        cp -rf $(find openwrt/bin/targets/x86/ -type f -name "immortalwrt-x86-64-generic-squashfs-combined-efi.img.gz") ./artifact/firmware/
        cp -rf $(find openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
    
    - name: Upload buildinfo
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_buildinfo_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./artifact/buildinfo/

    - name: Upload firmware
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware_${{matrix.target}}_${{ env.FILE_DATE }}
        path: ./artifact/firmware/

    - name: Upload firmware to cowtransfer
      id: cowtransfer
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ./artifact/firmware 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
        echo "::set-output name=url::$(cat cowtransfer.log | grep https | cut -f3 -d" ")"
    
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 8
        keep_minimum_runs: 0
